{"uuid":"ac6efcb3-a6f6-49b8-b588-befe56b46a80","historyId":"57ede10e457416a3be387801cbd49fbf","status":"passed","statusDetails":{},"steps":[],"attachments":[],"parameters":[],"labels":[{"name":"story","value":"api/pipelines"}],"links":[],"start":1637340051529,"name":"pipelines?projectId=6141d62d823f66daa6495879","descriptionHtml":"<p style=\"color:MediumPurple;\"> <b>  </b> </p> <h4 style=\"color:DodgerBlue;\"><b><i>Request:</i></b></h4> <p style=\"color:DodgerBlue\"> <b> GET - https://g.codefresh.io/api/pipelines </b> </p>  <table> <tr> <th style=\"border: 1px solid #dddddd;text-align: left;padding: 8px;color:Orange;\">  </th> <td style=\"border: 1px solid #dddddd;text-align: left;padding: 8px;\"> <pre style=\"color:Orange\"> <b>  </b> </pre> </td> </tr>  </table> </p> <h4 style=\"color:DodgerBlue;\"> <b> <i> Response: </i> </b> </h4> <p style=\"color:DodgerBlue\"> <b> 200 - OK </b> </p> <p > <pre style=\"color:Orange;\"> <b> {\"docs\":[{\"metadata\":{\"name\":\"default/test-report\",\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"revision\":72,\"accountId\":\"613f0065d3961bbac4184990\",\"created_at\":\"2021-11-11T15:01:37.036Z\",\"updated_at\":\"2021-11-19T08:24:42.167Z\",\"shortName\":\"test-report\",\"deprecate\":{},\"labels\":{\"tags\":[]},\"originalYamlString\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - newman run test.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\n  \",\"id\":\"618d3051b0da95d27b103c60\"},\"version\":\"1.0\",\"kind\":\"pipeline\",\"spec\":{\"triggers\":[{\"name\":\"anmolsarraf01/unit-testing\",\"type\":\"git\",\"repo\":\"anmolsarraf01/unit-testing\",\"events\":[\"push.heads\"],\"pullRequestAllowForkEvents\":false,\"commentRegex\":\"/.*/gi\",\"branchRegex\":\"/.*/gi\",\"branchRegexInput\":\"regex\",\"provider\":\"github\",\"disabled\":true,\"options\":{\"noCache\":false,\"noCfCache\":false,\"resetVolume\":false},\"verified\":true,\"context\":\"github\",\"contexts\":[],\"variables\":[],\"lastExecutionDate\":\"2021-11-19T16:39:25.537Z\",\"status\":\"verified\",\"id\":\"618d30559c7674d896ee5d2b\"}],\"stages\":[\"prepare\",\"Microservice A\",\"Microservice B\"],\"variables\":[],\"contexts\":[],\"terminationPolicy\":[],\"externalResources\":[],\"steps\":{\"main_clone\":{\"title\":\"Cloning main repository...\",\"type\":\"git-clone\",\"repo\":\"anmolsarraf01/cf-example-unit-test\",\"revision\":\"master\",\"git\":\"github\",\"stage\":\"prepare\"},\"run_my_tests_before_build\":{\"title\":\"Running Unit tests directly\",\"type\":\"freestyle\",\"stage\":\"Microservice A\",\"image_name\":\"anmolsarraf01/unit-test2\",\"tag\":\"master\",\"image\":\"golang:1.12\",\"working_directory\":\"./golang-app-A\",\"dockerfile\":\"Dockerfile\",\"commands\":[\"go test -v\"]},\"build_after_my_tests\":{\"title\":\"Building Go Docker Image\",\"type\":\"build\",\"stage\":\"Microservice A\",\"image_name\":\"anmolsarraf01/unit-test2\",\"working_directory\":\"./golang-app-A\",\"tag\":\"master\",\"dockerfile\":\"Dockerfile\"},\"unit_test_reporting_step\":{\"title\":\"Generate test reporting\",\"type\":\"freestyle\",\"image\":\"anmolsarraf01/unit-test2:master\",\"working_directory\":\"${{CF_VOLUME_PATH}}/\",\"commands\":[\"ls -l\",\"cd /$CF_VOLUME_PATH/cf-example-unit-test\",\"pwd\",\"newman run test.postman_collection.json -r allure\",\"newman run test.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\",\"ls -l\",\"pwd\",\"newman --version\",\"allure generate --clean\",\"ls\",\"cd /$CF_VOLUME_PATH/cf-example-unit-test/\",\"ls\",\"cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\",\"ls\"]},\"commit_and_push\":{\"title\":\"Commit changes and push\",\"type\":\"git-commit\",\"credentials\":{\"username\":\"anmolsarraf01\",\"password\":\"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\"},\"arguments\":{\"repo\":\"anmolsarraf01/test-results\",\"git\":\"github\",\"working_directory\":\"/codefresh/volume/cf-example-unit-test\",\"commit_message\":\"pushed into repo\",\"git_user_name\":\"anmolsarraf01\",\"git_user_email\":\"anmol.sarraf@wipro.com\",\"allow_empty\":false,\"add\":[\".\"]}}}},\"last_executed\":\"2021-11-19T16:39:25.558Z\"},{\"metadata\":{\"name\":\"default/docker3\",\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"revision\":39,\"accountId\":\"613f0065d3961bbac4184990\",\"created_at\":\"2021-09-30T13:13:36.756Z\",\"updated_at\":\"2021-11-02T19:48:52.011Z\",\"shortName\":\"docker3\",\"deprecate\":{},\"labels\":{\"tags\":[]},\"originalYamlString\":\"# More examples of Codefresh YAML can be found at\\n# https://codefresh.io/docs/docs/yaml-examples/examples/\\n\\nversion: \\\"1.0\\\"\\n# Stages can help you organize your steps in stages\\nstages:\\n  - \\\"clone\\\"\\n  - \\\"build\\\"\\n  - \\\"test\\\"\\n  - approval\\n  \\n\\nsteps:\\n  clone:\\n    title: Cloning repository\\n    type: git-clone\\n    repo: anmolsarraf01/docker\\n    revision: '${{CF_BRANCH}}'\\n    git: github\\n    stage: clone\\n\\n  build:\\n    title: Building Docker image\\n    type: build\\n    image_name: anmolsarraf01/docker\\n    working_directory: '${{clone}}'\\n    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'\\n    dockerfile: dockerfile\\n    stage: build\\n    when:\\n        branch:\\n          only:\\n            - main\\n    metadata: # Declare the metadata attribute\\n        set: # Specify the set operation\\n          - qa: pending\\n          - commit_message: ${{CF_COMMIT_MESSAGE}}\\n          - exit_code: 0\\n          - is_main: \\n              evaluate: \\\"'${{CF_BRANCH}}' == 'main'\\\"\\n  test:\\n    title: Running test\\n    stage: test\\n    image: 'anmolsarraf01/docker:latest'\\n    working_directory: '${{clone}}'\\n    commands:\\n      - ls\\n      - echo \\\"Hello World\\\"\\n      - echo \\\"welcome msg\\\" \\n      - echo $CF_BUILD_ID \\n      - echo $CF_BRANCH_TAG_NORMALIZED\\n  \\n  \\n  freestyle-step-1:\\n    description: Freestyle step\\n    title: free step 1\\n    image: anmolsarraf01/docker:latest\\n    commands:\\n      - cf_export VAR1=hello\\n      - cf_export USERNAME\\n      - cf_export PASSWORD\\n         \\n  freestyle-step-2:\\n      description: Freestyle step\\n      title: free step 2\\n      image: \\\"${{build}}\\\"\\n      commands:\\n        - echo $VAR1  \\n        - echo $USERNAME\\n        - echo $PASSWORD\\n        \\n  waitForApproval:\\n        type: pending-approval\\n        title: Deploy to Production?\\n        stage: approval\\n        timeout:\\n          duration: 2\\n          finalState: denied\\n          \\n  CollectAllMyDeps:\\n    title: Install dependencies\\n    image: python:3.6.4-alpine3.6\\n    commands:\\n      - pip install --upgrade pip\\n      \\n  MyUnitTests:\\n      title: JUnit tests\\n      stage: test\\n      image: 'maven:3.5.2-jdk-8-alpine'\\n      commands:\\n        - mvn -Dmaven.repo.local=/codefresh/volume/m2_repository test\\n    \\n \\n\\n\",\"id\":\"6155b800517f94b2d07b813f\"},\"version\":\"1.0\",\"kind\":\"pipeline\",\"spec\":{\"triggers\":[{\"name\":\"anmolsarraf01/docker\",\"type\":\"git\",\"repo\":\"anmolsarraf01/docker\",\"events\":[\"push.heads\"],\"pullRequestAllowForkEvents\":false,\"commentRegex\":\"/.*/gi\",\"branchRegex\":\"/.*/gi\",\"branchRegexInput\":\"regex\",\"provider\":\"github\",\"disabled\":true,\"options\":{\"noCache\":false,\"noCfCache\":false,\"resetVolume\":false},\"verified\":true,\"context\":\"github\",\"contexts\":[],\"variables\":[],\"lastExecutionDate\":\"2021-11-02T19:57:43.303Z\",\"status\":\"verified\",\"id\":\"6155b802e1226c8fdd1e8976\"}],\"stages\":[\"clone\",\"build\",\"test\",\"approval\"],\"variables\":[{\"key\":\"USERNAME\",\"value\":\"anmolsarraf01\",\"encrypted\":false},{\"key\":\"PASSWORD\",\"value\":\"abc123\",\"encrypted\":false}],\"contexts\":[],\"terminationPolicy\":[],\"packId\":\"5cd1746617313f468d669013\",\"externalResources\":[],\"steps\":{\"clone\":{\"title\":\"Cloning repository\",\"type\":\"git-clone\",\"repo\":\"anmolsarraf01/docker\",\"revision\":\"${{CF_BRANCH}}\",\"git\":\"github\",\"stage\":\"clone\"},\"build\":{\"title\":\"Building Docker image\",\"type\":\"build\",\"image_name\":\"anmolsarraf01/docker\",\"working_directory\":\"${{clone}}\",\"tag\":\"${{CF_BRANCH_TAG_NORMALIZED}}\",\"dockerfile\":\"dockerfile\",\"stage\":\"build\",\"when\":{\"branch\":{\"only\":[\"main\"]}},\"metadata\":{\"set\":[{\"qa\":\"pending\"},{\"commit_message\":\"${{CF_COMMIT_MESSAGE}}\"},{\"exit_code\":0},{\"is_main\":{\"evaluate\":\"'${{CF_BRANCH}}' == 'main'\"}}]}},\"test\":{\"title\":\"Running test\",\"stage\":\"test\",\"image\":\"anmolsarraf01/docker:latest\",\"working_directory\":\"${{clone}}\",\"commands\":[\"ls\",\"echo \\\"Hello World\\\"\",\"echo \\\"welcome msg\\\"\",\"echo $CF_BUILD_ID\",\"echo $CF_BRANCH_TAG_NORMALIZED\"]},\"freestyle-step-1\":{\"description\":\"Freestyle step\",\"title\":\"free step 1\",\"image\":\"anmolsarraf01/docker:latest\",\"commands\":[\"cf_export VAR1=hello\",\"cf_export USERNAME\",\"cf_export PASSWORD\"]},\"freestyle-step-2\":{\"description\":\"Freestyle step\",\"title\":\"free step 2\",\"image\":\"${{build}}\",\"commands\":[\"echo $VAR1\",\"echo $USERNAME\",\"echo $PASSWORD\"]},\"waitForApproval\":{\"type\":\"pending-approval\",\"title\":\"Deploy to Production?\",\"stage\":\"approval\",\"timeout\":{\"duration\":2,\"finalState\":\"denied\"}},\"CollectAllMyDeps\":{\"title\":\"Install dependencies\",\"image\":\"python:3.6.4-alpine3.6\",\"commands\":[\"pip install --upgrade pip\"]},\"MyUnitTests\":{\"title\":\"JUnit tests\",\"stage\":\"test\",\"image\":\"maven:3.5.2-jdk-8-alpine\",\"commands\":[\"mvn -Dmaven.repo.local=/codefresh/volume/m2_repository test\"]}}},\"last_executed\":\"2021-11-02T19:57:43.279Z\"},{\"metadata\":{\"name\":\"default/docker2\",\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"revision\":12,\"accountId\":\"613f0065d3961bbac4184990\",\"created_at\":\"2021-09-29T07:17:07.861Z\",\"updated_at\":\"2021-10-01T07:33:10.734Z\",\"shortName\":\"docker2\",\"deprecate\":{},\"labels\":{\"tags\":[]},\"originalYamlString\":\"# More examples of Codefresh YAML can be found at\\n# https://codefresh.io/docs/docs/yaml-examples/examples/\\n\\nversion: '1.0'\\n\\nstages:\\n  - clone\\n  - build\\n  - test\\n  - push\\n  - approval\\n\\nsteps:\\n  clone:\\n    title: Cloning repository\\n    type: git-clone\\n    repo: anmolsarraf01/docker\\n    revision: '${{CF_BRANCH}}'\\n    git: github\\n    stage: clone\\n\\n  build:\\n    title: Building Docker image\\n    type: build\\n    image_name: anmolsarraf01/docker\\n    working_directory: '${{clone}}'\\n    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'\\n    dockerfile: dockerfile\\n    stage: build\\n    when:\\n        branch:\\n          only:\\n            - main\\n    metadata: # Declare the metadata attribute\\n        set: # Specify the set operation\\n          - qa: pending\\n          - commit_message: ${{CF_COMMIT_MESSAGE}}\\n          - exit_code: 0\\n          - is_main: \\n              evaluate: \\\"'${{CF_BRANCH}}' == 'main'\\\"\\n\\n  test:\\n    title: Running test\\n    type: freestyle\\n    image: 'anmolsarraf01/docker:latest'\\n    working_directory: '${{clone}}'\\n    commands:\\n      - ls\\n    stage: test\\n\\n  push:\\n    stage: push\\n    type: push\\n    title: Pushing to a registry\\n    candidate: '${{build}}'\\n    tag: latest\\n    registry: dockerhub\\n    image_name: anmolsarraf01/docker\\n\\n  Freestyle:\\n      title: Running docker image\\n      type: freestyle\\n      working_directory: '${{clone}}'\\n      stage: test\\n      arguments:\\n        image: docker:latest\\n        commands:\\n          - echo \\\"Hello World\\\"\\n          - echo \\\"welcome msg\\\"\\n\\n  waitForApproval:\\n      type: pending-approval\\n      title: Deploy to Production?\\n      stage: approval\\n      timeout:\\n        duration: 2\\n        finalState: denied\\n\\n  myStep:\\n    title: Variables test step\\n    image: anmolsarraf01/docker:latest\\n    stage: test\\n    commands: \\n      - echo $CF_BUILD_ID \\n      - echo $CF_BRANCH_TAG_NORMALIZED \\n\",\"id\":\"615412f3517f9401bf7b7fe9\"},\"version\":\"1.0\",\"kind\":\"pipeline\",\"spec\":{\"triggers\":[{\"name\":\"anmolsarraf01/docker\",\"type\":\"git\",\"repo\":\"anmolsarraf01/docker\",\"events\":[\"push.heads\"],\"pullRequestAllowForkEvents\":false,\"commentRegex\":\"/.*/gi\",\"branchRegex\":\"/.*/gi\",\"branchRegexInput\":\"regex\",\"provider\":\"github\",\"disabled\":true,\"options\":{\"noCache\":false,\"noCfCache\":false,\"resetVolume\":false},\"verified\":true,\"context\":\"github\",\"contexts\":[],\"variables\":[],\"lastExecutionDate\":\"2021-09-29T14:58:03.022Z\",\"status\":\"verified\",\"id\":\"615412f6517f942ce77b7fea\"}],\"stages\":[\"clone\",\"build\",\"test\",\"push\",\"approval\"],\"variables\":[],\"contexts\":[],\"terminationPolicy\":[],\"packId\":\"5cd1746717313f468d669014\",\"externalResources\":[],\"steps\":{\"clone\":{\"title\":\"Cloning repository\",\"type\":\"git-clone\",\"repo\":\"anmolsarraf01/docker\",\"revision\":\"${{CF_BRANCH}}\",\"git\":\"github\",\"stage\":\"clone\"},\"build\":{\"title\":\"Building Docker image\",\"type\":\"build\",\"image_name\":\"anmolsarraf01/docker\",\"working_directory\":\"${{clone}}\",\"tag\":\"${{CF_BRANCH_TAG_NORMALIZED}}\",\"dockerfile\":\"dockerfile\",\"stage\":\"build\",\"when\":{\"branch\":{\"only\":[\"main\"]}},\"metadata\":{\"set\":[{\"qa\":\"pending\"},{\"commit_message\":\"${{CF_COMMIT_MESSAGE}}\"},{\"exit_code\":0},{\"is_main\":{\"evaluate\":\"'${{CF_BRANCH}}' == 'main'\"}}]}},\"test\":{\"title\":\"Running test\",\"type\":\"freestyle\",\"image\":\"anmolsarraf01/docker:latest\",\"working_directory\":\"${{clone}}\",\"commands\":[\"ls\"],\"stage\":\"test\"},\"push\":{\"stage\":\"push\",\"type\":\"push\",\"title\":\"Pushing to a registry\",\"candidate\":\"${{build}}\",\"tag\":\"latest\",\"registry\":\"dockerhub\",\"image_name\":\"anmolsarraf01/docker\"},\"Freestyle\":{\"title\":\"Running docker image\",\"type\":\"freestyle\",\"working_directory\":\"${{clone}}\",\"stage\":\"test\",\"arguments\":{\"image\":\"docker:latest\",\"commands\":[\"echo \\\"Hello World\\\"\",\"echo \\\"welcome msg\\\"\"]}},\"waitForApproval\":{\"type\":\"pending-approval\",\"title\":\"Deploy to Production?\",\"stage\":\"approval\",\"timeout\":{\"duration\":2,\"finalState\":\"denied\"}},\"myStep\":{\"title\":\"Variables test step\",\"image\":\"anmolsarraf01/docker:latest\",\"stage\":\"test\",\"commands\":[\"echo $CF_BUILD_ID\",\"echo $CF_BRANCH_TAG_NORMALIZED\"]}}},\"last_executed\":\"2021-09-29T14:58:03.012Z\"},{\"metadata\":{\"name\":\"default/docker\",\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"revision\":57,\"accountId\":\"613f0065d3961bbac4184990\",\"created_at\":\"2021-09-17T12:56:40.218Z\",\"updated_at\":\"2021-10-01T07:33:02.194Z\",\"shortName\":\"docker\",\"deprecate\":{},\"labels\":{\"tags\":[]},\"originalYamlString\":\"# More examples of Codefresh YAML can be found at\\n# https://codefresh.io/docs/docs/yaml-examples/examples/\\n\\nversion: '1.0'\\n\\nstages:\\n  - clone\\n  - build\\n  - test\\n  - push\\n  - approval\\n  \\nsteps:\\n  clone:\\n    title: Cloning repository\\n    type: git-clone\\n    repo: anmolsarraf01/docker\\n    revision: '${{CF_BRANCH}}'\\n    git: github\\n    stage: clone\\n    \\n  build:\\n    title: Building Docker image\\n    type: build\\n    image_name: anmolsarraf01/docker\\n    working_directory: '${{clone}}'\\n    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'\\n    dockerfile: dockerfile\\n    stage: build\\n    when:\\n        branch:\\n          only:\\n            - main\\n    \\n  test:\\n    title: Running test\\n    type: freestyle\\n    image: 'anmolsarraf01/docker:latest'\\n    working_directory: '${{clone}}'\\n    commands:\\n      - ls\\n    stage: test\\n    \\n  push:\\n    stage: push\\n    type: push\\n    title: Pushing to a registry\\n    candidate: '${{build}}'\\n    tag: latest\\n    registry: dockerhub\\n    image_name: anmolsarraf01/docker\\n    \\n  Freestyle:\\n      title: Running docker image\\n      type: freestyle\\n      working_directory: '${{clone}}'\\n      stage: test\\n      arguments:\\n        image: docker:latest\\n        commands:\\n          - echo \\\"Hello World\\\"\\n          - echo \\\"welcome msg\\\"\\n          \\n  waitForApproval:\\n      type: pending-approval\\n      title: Deploy to Production?\\n      stage: approval\\n      timeout:\\n        duration: 2\\n        finalState: denied\\n               \\n  myStep:\\n    title: Variables test step\\n    image: anmolsarraf01/docker:latest\\n    stage: test\\n    commands: \\n      - echo $CF_BUILD_ID \\n      - echo $CF_BRANCH_TAG_NORMALIZED \\n      - echo $MY_VALUE\\n      - echo $USERNAME\\n      - echo $PASSWORD\\n      \",\"id\":\"61449088823f6605bc495a54\"},\"version\":\"1.0\",\"kind\":\"pipeline\",\"spec\":{\"triggers\":[{\"name\":\"anmolsarraf01/docker\",\"type\":\"git\",\"repo\":\"anmolsarraf01/docker\",\"events\":[\"push.heads\"],\"pullRequestAllowForkEvents\":false,\"commentRegex\":\"/.*/gi\",\"branchRegex\":\"/.*/gi\",\"branchRegexInput\":\"regex\",\"provider\":\"github\",\"disabled\":true,\"options\":{\"noCache\":false,\"noCfCache\":false,\"resetVolume\":false},\"verified\":true,\"context\":\"github\",\"contexts\":[],\"variables\":[],\"lastExecutionDate\":\"2021-09-29T14:24:47.782Z\",\"status\":\"verified\",\"id\":\"6144908a823f6663fc495a55\"}],\"stages\":[\"clone\",\"build\",\"test\",\"push\",\"approval\"],\"variables\":[{\"key\":\"MY_VALUE\",\"value\":\"abc123\",\"encrypted\":false},{\"key\":\"USERNAME\",\"value\":\"anmolsarraf01\",\"encrypted\":false},{\"key\":\"PASSWORD\",\"value\":\"0000\",\"encrypted\":false}],\"contexts\":[],\"terminationPolicy\":[],\"packId\":\"5cd1746817313f468d669015\",\"externalResources\":[],\"steps\":{\"clone\":{\"title\":\"Cloning repository\",\"type\":\"git-clone\",\"repo\":\"anmolsarraf01/docker\",\"revision\":\"${{CF_BRANCH}}\",\"git\":\"github\",\"stage\":\"clone\"},\"build\":{\"title\":\"Building Docker image\",\"type\":\"build\",\"image_name\":\"anmolsarraf01/docker\",\"working_directory\":\"${{clone}}\",\"tag\":\"${{CF_BRANCH_TAG_NORMALIZED}}\",\"dockerfile\":\"dockerfile\",\"stage\":\"build\",\"when\":{\"branch\":{\"only\":[\"main\"]}}},\"test\":{\"title\":\"Running test\",\"type\":\"freestyle\",\"image\":\"anmolsarraf01/docker:latest\",\"working_directory\":\"${{clone}}\",\"commands\":[\"ls\"],\"stage\":\"test\"},\"push\":{\"stage\":\"push\",\"type\":\"push\",\"title\":\"Pushing to a registry\",\"candidate\":\"${{build}}\",\"tag\":\"latest\",\"registry\":\"dockerhub\",\"image_name\":\"anmolsarraf01/docker\"},\"Freestyle\":{\"title\":\"Running docker image\",\"type\":\"freestyle\",\"working_directory\":\"${{clone}}\",\"stage\":\"test\",\"arguments\":{\"image\":\"docker:latest\",\"commands\":[\"echo \\\"Hello World\\\"\",\"echo \\\"welcome msg\\\"\"]}},\"waitForApproval\":{\"type\":\"pending-approval\",\"title\":\"Deploy to Production?\",\"stage\":\"approval\",\"timeout\":{\"duration\":2,\"finalState\":\"denied\"}},\"myStep\":{\"title\":\"Variables test step\",\"image\":\"anmolsarraf01/docker:latest\",\"stage\":\"test\",\"commands\":[\"echo $CF_BUILD_ID\",\"echo $CF_BRANCH_TAG_NORMALIZED\",\"echo $MY_VALUE\",\"echo $USERNAME\",\"echo $PASSWORD\"]}}},\"last_executed\":\"2021-09-29T14:24:47.768Z\"}],\"count\":4} </b> </pre> </p>","stop":1637340051633}