{"uuid":"588ac122-2f54-44b2-b5e1-f8b5dc3a3a9f","historyId":"92aa3539eb1f0218f460630836717c47","status":"passed","statusDetails":{},"steps":[],"attachments":[],"parameters":[],"labels":[{"name":"story","value":"api/workflow"}],"links":[],"start":1637310568795,"name":"workflow?pipeline=618d3051b0da95d27b103c60","descriptionHtml":"<p style=\"color:MediumPurple;\"> <b>  </b> </p> <h4 style=\"color:DodgerBlue;\"><b><i>Request:</i></b></h4> <p style=\"color:DodgerBlue\"> <b> GET - https://g.codefresh.io/api/workflow </b> </p>  <table> <tr> <th style=\"border: 1px solid #dddddd;text-align: left;padding: 8px;color:Orange;\">  </th> <td style=\"border: 1px solid #dddddd;text-align: left;padding: 8px;\"> <pre style=\"color:Orange\"> <b>  </b> </pre> </td> </tr>  </table> </p> <h4 style=\"color:DodgerBlue;\"> <b> <i> Response: </i> </b> </h4> <p style=\"color:DodgerBlue\"> <b> 200 - OK </b> </p> <p > <pre style=\"color:Orange;\"> <b> {\"workflows\":{\"docs\":[{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"6197601c8696e66d52e2b149\",\"created\":\"2021-11-19T08:28:12.666Z\",\"started\":\"2021-11-19T08:28:21.895Z\",\"delayed\":0,\"status\":\"running\",\"pendingLicense\":false,\"progress\":\"6197601c8696e6d41de2b148\",\"request\":\"6197601c8696e601b0e2b14a\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - >-\\n        newman run test.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: /codefresh/volume/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - newman run test.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\n  \",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61975f6b7346d919eb4f3a63\",\"created\":\"2021-11-19T08:25:15.160Z\",\"started\":\"2021-11-19T08:25:30.444Z\",\"delayed\":0,\"status\":\"terminating\",\"pendingLicense\":false,\"progress\":\"61975f6a7346d912f04f3a62\",\"request\":\"61975f6b7346d985114f3a64\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[{\"_id\":\"61976013c7787b953c63f05f\",\"date\":\"2021-11-19T08:28:03.095Z\",\"byBuildManager\":false,\"requester\":\"anmolsarraf01\",\"requesterType\":\"user\",\"message\":\"Terminated by user: anmolsarraf01\",\"cause\":\"user-request\",\"force\":true,\"workflowStatus\":\"running\"}],\"systemEvents\":[],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - >-\\n        newman run test.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: /codefresh/volume/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - newman run test.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\n  \",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61975e2ea0107913bd7acdbe\",\"created\":\"2021-11-19T08:19:58.482Z\",\"started\":\"2021-11-19T08:20:06.650Z\",\"finished\":\"2021-11-19T08:20:56.808Z\",\"delayed\":0,\"status\":\"success\",\"pendingLicense\":false,\"progress\":\"61975e2ea010795ac27acdbd\",\"request\":\"61975e2ea0107973f87acdbf\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - >-\\n        newman run test.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - newman run test.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  \",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61975cfc6a5339d4bdd69042\",\"created\":\"2021-11-19T08:14:52.931Z\",\"started\":\"2021-11-19T08:15:00.144Z\",\"finished\":\"2021-11-19T08:15:55.444Z\",\"delayed\":0,\"status\":\"success\",\"pendingLicense\":false,\"progress\":\"61975cfc6a53396e09d69041\",\"request\":\"61975cfc6a533965d7d69043\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  \",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61975c33f05b56124dfb2117\",\"created\":\"2021-11-19T08:11:31.172Z\",\"started\":\"2021-11-19T08:11:38.808Z\",\"finished\":\"2021-11-19T08:12:34.464Z\",\"delayed\":0,\"status\":\"success\",\"pendingLicense\":false,\"progress\":\"61975c32f05b5682c6fb2116\",\"request\":\"61975c33f05b56d8e5fb2118\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  \",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61975b9687447485a4b74cad\",\"created\":\"2021-11-19T08:08:54.742Z\",\"started\":\"2021-11-19T08:09:02.845Z\",\"finished\":\"2021-11-19T08:10:00.000Z\",\"delayed\":0,\"status\":\"error\",\"pendingLicense\":false,\"progress\":\"61975b96874474676db74cac\",\"request\":\"61975b9687447420a9b74cae\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[{\"retriable\":false,\"_id\":\"61975bd6c7787b138863ef19\",\"kind\":\"error\",\"message\":\"Failed to run freestyle step: Generate test reporting\",\"step\":\"Generate test reporting\"}],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - >-\\n        newman run test.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run test.postman_collection.json -r allure\\n      - newman run test.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  \",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61975966d2fafc31364d58c3\",\"created\":\"2021-11-19T07:59:34.374Z\",\"started\":\"2021-11-19T07:59:42.121Z\",\"finished\":\"2021-11-19T08:01:46.256Z\",\"delayed\":0,\"status\":\"error\",\"pendingLicense\":false,\"progress\":\"61975966d2fafc54764d58c2\",\"request\":\"61975966d2fafc078c4d58c4\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[{\"retriable\":false,\"_id\":\"619759e7874474016eb74c63\",\"kind\":\"error\",\"message\":\"Failed to run freestyle step: Commit and push\",\"step\":\"Commit and push\"},{\"retriable\":false,\"_id\":\"619759e97346d966cb4f3859\",\"kind\":\"error\",\"message\":\"step: commit_and_push failed\",\"step\":\"Commit changes and push\"}],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: /codefresh/volume/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\",\"commit_and_push\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"619758881addda55d5e290a1\",\"created\":\"2021-11-19T07:55:52.848Z\",\"started\":\"2021-11-19T07:56:00.880Z\",\"finished\":\"2021-11-19T07:57:08.781Z\",\"delayed\":0,\"status\":\"error\",\"pendingLicense\":false,\"progress\":\"619758881addda2c85e290a0\",\"request\":\"619758881addda6141e290a2\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[{\"retriable\":false,\"_id\":\"619758d26edbd9b7a6847620\",\"kind\":\"error\",\"message\":\"Failed to run freestyle step: Commit and push\",\"step\":\"Commit and push\"},{\"retriable\":false,\"_id\":\"619758d4a01079095e7accad\",\"kind\":\"error\",\"message\":\"step: commit_and_push failed\",\"step\":\"Commit changes and push\"}],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: /codefresh/volume/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\",\"commit_and_push\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61967da6cc125d8581ab4233\",\"created\":\"2021-11-18T16:21:59.030Z\",\"started\":\"2021-11-18T16:22:08.250Z\",\"finished\":\"2021-11-18T16:23:44.459Z\",\"delayed\":0,\"status\":\"success\",\"pendingLicense\":false,\"progress\":\"61967da6cc125d2a4eab4231\",\"request\":\"61967da6cc125d40ceab4234\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: /codefresh/volume/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\",\"commit_and_push\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"619630dac3adde4c0da88e0e\",\"created\":\"2021-11-18T10:54:18.239Z\",\"started\":\"2021-11-18T10:54:25.870Z\",\"finished\":\"2021-11-18T10:56:23.749Z\",\"delayed\":0,\"status\":\"success\",\"pendingLicense\":false,\"progress\":\"619630dac3adde3faca88e0d\",\"request\":\"619630dac3adde4ecaa88e0f\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: /codefresh/volume/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\",\"commit_and_push\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61962fa47b04a131036ef0b7\",\"created\":\"2021-11-18T10:49:08.200Z\",\"started\":\"2021-11-18T10:49:18.378Z\",\"finished\":\"2021-11-18T10:50:54.410Z\",\"delayed\":0,\"status\":\"error\",\"pendingLicense\":false,\"progress\":\"61962fa37b04a1f1466ef0b6\",\"request\":\"61962fa47b04a1263c6ef0b8\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[{\"retriable\":false,\"_id\":\"6196300c7346d99b274eb7fa\",\"kind\":\"error\",\"message\":\"Failed to run freestyle step: Commit and push\",\"step\":\"Commit and push\"},{\"retriable\":false,\"_id\":\"6196300d7346d97e854eb7fb\",\"kind\":\"error\",\"message\":\"step: commit_and_push failed\",\"step\":\"Commit changes and push\"}],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: 'anmolsarraf01/test-results:main'\\n      git: github\\n      working_directory: /codefresh/volume/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results:main\\n      git: github\\n      working_directory: '/codefresh/volume/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\",\"commit_and_push\"]},{\"project\":\"default\",\"projectId\":\"6141d62d823f66daa6495879\",\"serviceId\":\"618d3051b0da95d27b103c60\",\"serviceName\":\"test-report\",\"pipelineName\":\"default/test-report\",\"pipelineTriggerId\":\"618d30559c7674d896ee5d2b\",\"pipelineTriggerName\":\"anmolsarraf01/unit-testing\",\"triggersCount\":1,\"repoOwner\":\"anmolsarraf01\",\"repoName\":\"unit-testing\",\"id\":\"61962eb67037153e1b96a692\",\"created\":\"2021-11-18T10:45:10.655Z\",\"started\":\"2021-11-18T10:45:18.298Z\",\"finished\":\"2021-11-18T10:47:22.658Z\",\"delayed\":0,\"status\":\"error\",\"pendingLicense\":false,\"progress\":\"61962eb67037156bc596a690\",\"request\":\"61962eb6703715f91d96a693\",\"trigger\":\"build\",\"triggeredBy\":\"613f0065d3961bde4518498f\",\"webhookTriggered\":false,\"triggerType\":\"GIT\",\"account\":\"613f0065d3961bbac4184990\",\"autoGeneratedYaml\":false,\"terminationRequest\":[],\"systemEvents\":[{\"retriable\":false,\"_id\":\"61962f3833f551088f259627\",\"kind\":\"error\",\"message\":\"Failed to run freestyle step: Commit and push\",\"step\":\"Commit and push\"},{\"retriable\":false,\"_id\":\"61962f3907197db512e6de6f\",\"kind\":\"error\",\"message\":\"step: commit_and_push failed\",\"step\":\"Commit changes and push\"}],\"finalWorkflowYaml\":\"version: '1.0'\\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: anmolsarraf01/cf-example-unit-test\\n    revision: master\\n    git: github\\n    stage: prepare\\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    tag: master\\n    image: 'golang:1.12'\\n    working_directory: ./golang-app-A\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: Microservice A\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: ./golang-app-A\\n    tag: master\\n    dockerfile: Dockerfile\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: freestyle\\n    image: 'anmolsarraf01/unit-test2:master'\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - >-\\n        newman run unit-testing.postman_collection.json -r allure\\n        --reporter-allure-export\\n        ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: 'anmolsarraf01/test-results:main'\\n      git: github\\n      working_directory: $CF_VOLUME_PATH/cf-example-unit-test\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\\nstages:\\n  - prepare\\n  - Microservice A\\n  - Microservice B\\n\",\"hasExtendedYaml\":true,\"runtime\":{\"schedulerConfig\":{\"type\":\"KubernetesPod\"}},\"exportedVariables\":{},\"pendingApprovals\":[],\"useDebugger\":false,\"initiator\":\"anmolsarraf01\",\"initiatorAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"hasImplicitGitCloneStep\":false,\"packId\":\"5cd1746617313f468d669013\",\"keepPVCsForPendingApproval\":false,\"pendingApprovalConcurrencyApplied\":false,\"buildStrategy\":\"fresh-start\",\"userYamlDescriptor\":\"version: '1.0'\\nstages:\\n  - prepare\\n  - 'Microservice A'\\n  - 'Microservice B'\\n  \\nsteps:\\n  main_clone:\\n    title: Cloning main repository...\\n    type: git-clone\\n    repo: \\\"anmolsarraf01/cf-example-unit-test\\\"\\n    revision: 'master'\\n    git: github\\n    stage: prepare\\n  \\n  run_my_tests_before_build:\\n    title: Running Unit tests directly\\n    type: freestyle\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    tag: 'master'\\n    image: golang:1.12\\n    working_directory: './golang-app-A'\\n    dockerfile: Dockerfile\\n    commands:\\n      - go test -v\\n    \\n  build_after_my_tests:\\n    title: Building Go Docker Image\\n    type: build\\n    stage: 'Microservice A'\\n    image_name: anmolsarraf01/unit-test2\\n    working_directory: './golang-app-A'\\n    tag: 'master'\\n    dockerfile: Dockerfile\\n\\n  unit_test_reporting_step:\\n    title: Generate test reporting\\n    type: \\\"freestyle\\\"\\n    image: anmolsarraf01/unit-test2:master\\n    working_directory: '${{CF_VOLUME_PATH}}/'\\n    commands:\\n      - ls -l\\n      # - cd cf-example-unit-test\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test\\n      - pwd\\n      - newman run unit-testing.postman_collection.json -r allure\\n      - newman run unit-testing.postman_collection.json -r allure --reporter-allure-export ${{CF_VOLUME_PATH}}/cf-example-unit-test/golang-app-A\\n      - ls -l\\n      - pwd\\n      - newman --version\\n      - allure generate --clean\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/\\n      - ls\\n      - cd /$CF_VOLUME_PATH/cf-example-unit-test/allure-report\\n      - ls\\n      \\n  commit_and_push:\\n    title: Commit changes and push\\n    type: git-commit\\n    credentials:\\n      username: anmolsarraf01\\n      password: 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\\n    arguments:\\n      repo: anmolsarraf01/test-results:main\\n      git: github\\n      working_directory: '$CF_VOLUME_PATH/cf-example-unit-test'\\n      commit_message: pushed into repo\\n      git_user_name: anmolsarraf01\\n      git_user_email: anmol.sarraf@wipro.com\\n      allow_empty: false\\n      add:\\n        - .\",\"committer\":\"anmolsarraf01\",\"committerAvatar\":\"https://avatars.githubusercontent.com/u/90602991?v=4\",\"eventName\":\"github: Push commits\",\"eventLabel\":\"Push commits\",\"revision\":\"ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchName\":\"main\",\"commitMessage\":\"Add files via upload\",\"repoURL\":\"https://github.com/anmolsarraf01/unit-testing\",\"commitURL\":\"https://github.com/anmolsarraf01/unit-testing/commit/ad1b7badf845702d0b8e06c1d3c48f31dbf17103\",\"branchURL\":\"https://github.com/anmolsarraf01/unit-testing/tree/main\",\"provider\":\"github\",\"event\":\"push\",\"steps\":[\"Initializing Process\",\"main_clone\",\"run_my_tests_before_build\",\"build_after_my_tests\",\"unit_test_reporting_step\",\"commit_and_push\"]}]},\"pagination\":{\"sessionId\":\"username:anmolsarraf01\",\"page\":1,\"pageSize\":12,\"firstId\":\"6197601c8696e66d52e2b149\",\"lastId\":\"61962eb67037153e1b96a692\",\"nextPage\":true,\"prevPage\":false}} </b> </pre> </p>","stop":1637310569183}